**------------------------------------------------------------------------------------------------
* @header_start
* WebGrab+Plus ini for grabbing EPG data from TvGuide websites
* @Site: cinemagia.ro
* @MinSWversion: V5.0
* @Revision 8 - [30/08/2024] Blackbear199
*  -  add scope(fix details page hanging up)
*  -  actor improvement
* @Revision 7 - [12/05/2024] Blackbear199
*  -  showsplit fix(again)
* @Revision 6 - [10/05/2024] Blackbear199
*  -  showsplit fix
* @Revision 5 - [21/02/2022] Blackbear199
*  -  desc fix
* @Revision 4 - [29/12/2019] Blackbear199
*  - showsplit fix
* @Revision 3 - [25/08/2019] Blackbear199
*  - description fix
* @Revision 2 - [07/01/2019] Blackbear199
*  - channel.xml fix
* @Revision 1 - [24/02/2017] Blackbear199
*  - fix channel logo
* @Revision 0 - [31/08/2016] Blackbear199
*  - creation
* @Remarks:
* @header_end
**------------------------------------------------------------------------------------------------
site {url=cinemagia.ro|timezone=Europe/Bucharest|maxdays=8.1|cultureinfo=ro-RO|charset=UTF-8|titlematchfactor=90}
site {episodesystem=onscreen|ratingsystem=RO}
*
url_index {url|https://www.cinemagia.ro/program-tv/post/|channel|/}
url_index.headers {customheader=Accept-Encoding=gzip,deflate,br}
*
urldate.format {daycounter|0}
*
index_urlchannellogo.modify {set|https://static.cinemagia.ro/img/tv/stations_logo/40/'config_site_id'.jpg}
*
index_showsplit.scrub {multi|class="events">||</tbody>|</tbody>}
scope.range {(splitindex)|end}
index_temp_1.modify {set|0}
loop {('index_temp_1' < "7" max=7)|end}
index_temp_9.modify {substring(type=element)|'index_showsplit' 'index_temp_1' 1/7}
index_temp_9.modify {replace|\||####}
index_temp_8.modify {addend|'index_temp_9'}
index_temp_1.modify {calculate(format=F0)|1 +}
end_loop
index_showsplit.modify {substring(type=regex)|'index_temp_8' "<tr.*?<\/tr>"}
*index_showsplit.modify {(debug)}
end_scope
*
scope.range {(indexshowdetails)|end}
index_urlshow {url||<a href="||"|"}
index_urlshow.headers {customheader=Accept-Encoding=gzip,deflate,br}
*
index_start.scrub {single|<div>||</div>|</div>}
index_title.scrub {single|<div class="title">||</td>|</td>}
index_subtitle.scrub {single(separator="-" include=last)|<span class="sub_title">||</span>|</span>}
index_description.scrub {single|<span class="small">||</span>|</span>}
index_episode.scrub {single(pattern="Sezonul 'S1' - Episodul 'E1'")|<div style="font-weight:normal;">||</div>|</div>}
index_rating.scrub {single|<div class="cna">||</div>|</div>}
index_showicon.scrub {single|<img src="||"|"}
*
index_title.modify {cleanup(tags="<span""</span>")}
index_title.modify {cleanup(tags="<div""</div>")}
index_title.modify {cleanup(tags="<"">")}
index_title.modify {remove| - serial}
index_description.modify {cleanup(tags="<"">")}
index_description.modify {remove('index_urlshow' not "")|'index_description'}
loop {('index_urlshow' not "" max=1)|2}
index_description.modify {clear}
index_showicon.modify {clear}
index_rating.modify {cleanup(style=upper)}
end_scope
*
scope.range {(showdetails)|end}
title.scrub {single|<h2 class="title_1 mb15">||</h2>|</h2>}
titleoriginal.scrub {single|<h1 class="inline pr2">|">|</a>|</h1>}
description.scrub {single|id="short_body_sinopsis">||</div>|</div>}
description.scrub {single|<div class="mt10">|<div class="ml15">|</div>|</div>}
category.scrub {multi|id="movieGenreUserChoiceResults">|<span>|</span>|</ul>}
productiondate.scrub {single|</h1>|class="link1">(|)</a>|)</a>}
country.scrub {single(separator=", ")|<h3>Ţara</h3>|<span>|</span>|</div>}
ratingicon.scrub {single|Rating </h3>|src="|"|</li>}
starrating.scrub {single|id="ratingGlobalInfo">|font-weight:bold;">|</span>|</div>}
temp_1.scrub {single|<div class="imdb-rating|>IMDB: |</a>|</div>}
showicon.scrub {single|<td style="vertical-align:top">|<img src="|"|</td>}
*
titleoriginal.modify {clear('title')}
titleoriginal.modify {addend(not "")|(lang=en)}
description.modify {cleanup(tags="<"">")}
description.modify {cleanup}
country.modify {cleanup(tags="<"">")}
starrating.modify {addend(not "")|(system=Nota Film)}
starrating.modify {addend('temp_1' not "")|\|'temp_1'(system=Imdb)}
end_scope
*
urlsubdetail.modify {addstart('index_urlshow' not "")|'index_urlshow'distributie/}
urlsubdetail.headers {customheader=Accept-Encoding=gzip,deflate,br}
*
subdetail_director.scrub {multi(max=1)|Regia</h2>|<td>|</td>|</table>}
subdetail_director.scrub {multi(max=1 include="Regizor")|Echipa</h2>|<tr>|</tr>|</table>}
subdetail_actor.scrub {multi|Distributia</h2>|<td style="width:300px"|</tr>|</table>}
subdetail_producer.scrub {multi(max=1 include="producător")|Echipa</h2>|<tr>|</tr>|</table>}
subdetail_producer.scrub {multi(max=1 include="coproducator")|Echipa</h2>|<tr>|</tr>|</table>}
subdetail_writer.scrub {multi(max=1 include="scriitor")|Echipa</h2>|<tr>|</tr>|</table>}
subdetail_composer.scrub {multi(max=1 include="muzica")|Echipa</h2>|<tr>|</tr>|</table>}
*
subdetail_director.modify {cleanup(tags="<"">")}
subdetail_director.modify {remove|Regizor}
subdetail_director.modify {remove|regizor secund}
subdetail_actor.modify {remove(type=regex)|"^[^>]*>"}
subdetail_actor.modify {replace(type=regex)|"<\/a>.*?<td[^>]*>"|(role=}
subdetail_actor.modify {remove(type=regex)|"\(?\d+ episodes?, \d+\)?"}
subdetail_actor.modify {cleanup(tags="<"">")}
subdetail_actor.modify {addend(~ "role=")|)}
subdetail_actor.modify {remove|(role=)}
subdetail_actor.modify {remove|\n}
subdetail_actor.modify {replace(type=regex)|"\s{2,}"| }
subdetail_actor.modify {replace(type=regex)|"\s*\/\s*"|/}
subdetail_producer.modify {cleanup(tags="<"">")}
subdetail_producer.modify {remove|producător executiv}
subdetail_producer.modify {remove|producător}
subdetail_producer.modify {remove|coproducator}
subdetail_writer.modify {cleanup(tags="<"">")}
subdetail_writer.modify {remove|scriitor}
subdetail_composer.modify {cleanup(tags="<"">")}
subdetail_composer.modify {remove|muzica}
**  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _
**      #####  CHANNEL FILE CREATION (only to create the xxx-channel.xml file)
**
** @auto_xml_channel_start
*url_index {url|https://www.cinemagia.ro/program-tv/}
*index_site_id.scrub {multi|<li class="station-container">|<a href="https://www.cinemagia.ro/program-tv/|/"|</li>}
*index_site_channel.scrub {multi|<li class="station-container">|class="station-link">|</a>|</li>}
*index_site_id.modify {cleanup(removeduplicates=equal,100 link="index_site_channel")}
** @auto_xml_channel_end
